{"version":3,"file":"js/143.c90dbaf7.js","mappings":"06BAiDA,MAAMA,EAAQC,EACRC,EAAQC,EAERC,GAAQC,EAAAA,EAAAA,IAAS,CACrBC,KAAM,GACNC,YAAa,GACbC,WAAY,KACZC,WAAY,OAmBd,SAASC,IACHN,EAAME,MAAQF,EAAMI,YAAcJ,EAAMK,WAC1CT,EAAM,SAAUI,GAEhBO,MAAM,oBAEV,C,OAtBAC,EAAAA,EAAAA,KAAU,KACW,QAAfV,EAAMW,MACRT,EAAME,KAAO,GACbF,EAAMG,YAAc,GACpBH,EAAMI,WAAa,KACnBJ,EAAMK,WAAa,MACK,SAAfP,EAAMW,OACfT,EAAMU,GAAKZ,EAAMa,KAAKD,GACtBV,EAAME,KAAOJ,EAAMa,KAAKT,KACxBF,EAAMG,YAAcL,EAAMa,KAAKR,YAC/BH,EAAMI,WAAaN,EAAMa,KAAKP,WAC9BJ,EAAMK,WAAaP,EAAMa,KAAKN,WAChC,I,4wCCjEF,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,gfCiCA,MAAMZ,GAAQC,EAAAA,EAAAA,IAAS,CACrBY,KAAM,GACNC,YAAa,GACbC,YAAa,GACbC,aAAc,CACZd,KAAM,OACNC,YAAa,mBACbC,WAAY,GACZC,WAAY,IAEdY,eAAe,EACfR,KAAM,KASR,SAASS,IACPlB,EAAMS,KAAO,MACbT,EAAMiB,eAAgB,CACxB,CAEA,SAASE,EAAWC,GAClBpB,EAAMgB,aAAeI,EACrBpB,EAAMS,KAAO,OACbT,EAAMiB,eAAgB,CACxB,CAEA,SAASI,EAAeV,GACtBW,EAAAA,EAAMC,OAAQ,oBAAmBZ,EAAKD,MAAMc,MAAMC,IAChDzB,EAAMa,KAAOY,EAASZ,IAAI,GAE9B,CAEA,SAASa,IACPJ,EAAAA,EAAMK,IAAI,mBAAmBH,MAAMC,IACjCzB,EAAMc,YAAcW,EAASZ,IAAI,GAErC,CAEA,SAASe,IACPN,EAAAA,EAAMK,IAAI,mBAAmBH,MAAMC,IACjCzB,EAAMe,YAAcU,EAASZ,IAAI,GAErC,CAEA,SAASgB,IACPP,EAAAA,EAAMK,IAAI,iBAAiBH,MAAMC,IAC/BzB,EAAMa,KAAOY,EAASZ,IAAI,GAE9B,CAEA,SAASP,EAAYK,GACA,QAAfX,EAAMS,KACRqB,EAAYnB,GACY,SAAfX,EAAMS,MACfsB,EAAepB,EAEnB,CAEAqB,eAAeF,EAAYnB,GACzBsB,QAAQC,IAAIvB,SACNW,EAAAA,EAAMa,KAAK,gBAAiBxB,GAAMa,MAAK,KAC3CK,IACA7B,EAAMiB,eAAgB,CAAK,GAE/B,CAEA,SAASc,EAAepB,GACtBW,EAAAA,EAAMc,MAAM,gBAAiBzB,GAAMa,MAAK,KACtCK,IACA7B,EAAMiB,eAAgB,CAAK,GAE/B,C,OA9DAT,EAAAA,EAAAA,KAAU,KACRqB,IACAD,IACAF,GAAgB,I,44BCpDlB,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/modal/EmplDetailModal.vue","webpack://frontend/./src/views/modal/EmplDetailModal.vue?3b48","webpack://frontend/./src/views/mgmt/EmployeeManagement.vue","webpack://frontend/./src/views/mgmt/EmployeeManagement.vue?3f06"],"sourcesContent":["<template>\r\n  <div class=\"modal\" tabindex=\"-1\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"emits('onClose')\">&times;</span>\r\n      <h1>{{ props.mode }}</h1>\r\n      <hr>\r\n      <div class=\"data-row\">\r\n        <label for='name'>Name</label>\r\n        <input id='name' v-model='model.name'>\r\n      </div>\r\n      <div class=\"data-row\">\r\n        <label for='description'>Description</label>\r\n        <input id='description' v-model='model.description'>\r\n      </div>\r\n      <div class=\"data-row\">\r\n        <label for='profession'>Profession</label>\r\n        <select id='profession' v-model=\"model.profession\">\r\n          <template v-for=\"item in props.profs\" :key=\"item.id\">\r\n            <option :selected=\"item.id === props.empl.profession.id\"\r\n                    :value=\"item\">{{ item.name }}\r\n            </option>\r\n          </template>\r\n        </select>\r\n      </div>\r\n      <div class=\"data-row\">\r\n        <label for='department'>Department</label>\r\n        <select id='department' v-model=\"model.department\">\r\n          <template v-for=\"item in props.depts\" :key=\"item.id\">\r\n            <option :selected=\"item.id === props.empl.department.id\"\r\n                    :value=\"item\">{{ item.name }}\r\n            </option>\r\n          </template>\r\n        </select>\r\n      </div>\r\n      <div class=\"btns\">\r\n        <button class=\"save-btn\" @click=\"saveChanges\">\r\n          <i/> Save\r\n        </button>\r\n        <button @click=\"emits('onClose')\">\r\n        <i/> Cancel\r\n      </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineEmits, defineProps, onMounted, reactive} from 'vue';\r\n\r\nconst emits = defineEmits(['onClose']);\r\nconst props = defineProps(['empl', 'depts', 'profs', 'mode']);\r\n\r\nconst model = reactive({\r\n  name: '',\r\n  description: '',\r\n  profession: null,\r\n  department: null\r\n});\r\n\r\nonMounted(() => {\r\n  if (props.mode === 'Add') {\r\n    model.name = '';\r\n    model.description = '';\r\n    model.profession = null;\r\n    model.department = null;\r\n  } else if (props.mode === 'Edit') {\r\n    model.id = props.empl.id;\r\n    model.name = props.empl.name;\r\n    model.description = props.empl.description;\r\n    model.profession = props.empl.profession;\r\n    model.department = props.empl.department;\r\n  }\r\n\r\n})\r\n\r\nfunction saveChanges() {\r\n  if (model.name && model.profession && model.department) {\r\n    emits('onSave', model);\r\n  } else {\r\n    alert('Fields are empty.');\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  position: fixed; /* Stay in place */\r\n  z-index: 1; /* Sit on top */\r\n  padding-top: 100px; /* Location of the box */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%; /* Full width */\r\n  height: 100%; /* Full height */\r\n  overflow: auto; /* Enable scroll if needed */\r\n  background-color: rgb(0, 0, 0); /* Fallback color */\r\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\r\n}\r\n\r\n/* Modal Content */\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n/* The Close Button */\r\n.close {\r\n  color: #aaaaaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: #000;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.btns {\r\n  text-align: right;\r\n}\r\n\r\n.save-btn {\r\n  margin-right: 1em;\r\n}\r\n\r\n.data-row {\r\n  margin-top: 1em;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  display: block;\r\n  width: 150px;\r\n  float: left;\r\n}\r\n\r\nlabel:after {\r\n  content: \": \"\r\n}\r\n</style>\r\n","import script from \"./EmplDetailModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmplDetailModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EmplDetailModal.vue?vue&type=style&index=0&id=4af97f69&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4af97f69\"]])\n\nexport default __exports__","<template>\r\n  <h1>Employees</h1>\r\n  <hr>\r\n  <button @click=\"openAddModal\">\r\n    <i/> Add\r\n  </button>\r\n  <table class=\"empl-tbl\" v-if=\"model.data.length\">\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Description</th>\r\n      <th>Profession</th>\r\n      <th>Department</th>\r\n    </tr>\r\n    <tr class=\"data-row\" v-for=\"item in model.data\" :key=\"item.id\" @click=\"showDetail(item)\">\r\n      <td>{{ item.id }}</td>\r\n      <td>{{ item.name }}</td>\r\n      <td>{{ item.description }}</td>\r\n      <td>{{ item.profession.name }}</td>\r\n      <td>{{ item.department.name }}</td>\r\n      <td><span class=\"close\" @click.stop=\"deleteEmployee(item)\">&times;</span></td>\r\n    </tr>\r\n  </table>\r\n  <section class=\"no-data\" v-else>There are no elements.</section>\r\n  <empl-detail-modal\r\n      v-if=\"model.detailVisible\"\r\n      :empl=\"model.selectedEmpl\"\r\n      :mode=\"model.mode\"\r\n      :depts=\"model.departments\"\r\n      :profs=\"model.professions\"\r\n      @onClose=\"model.detailVisible=false\"\r\n      @onSave=\"saveChanges\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {onMounted, reactive} from \"vue\";\r\nimport axios from \"axios\";\r\nimport EmplDetailModal from \"@/views/modal/EmplDetailModal.vue\";\r\n\r\nconst model = reactive({\r\n  data: [],\r\n  departments: [],\r\n  professions: [],\r\n  selectedEmpl: {\r\n    name: 'Test',\r\n    description: 'Test description',\r\n    profession: '',\r\n    department: ''\r\n  },\r\n  detailVisible: false,\r\n  mode: ''\r\n})\r\n\r\nonMounted(() => {\r\n  getEmployees();\r\n  getProfessions();\r\n  getDepartments();\r\n})\r\n\r\nfunction openAddModal() {\r\n  model.mode = 'Add';\r\n  model.detailVisible = true;\r\n}\r\n\r\nfunction showDetail(item) {\r\n  model.selectedEmpl = item;\r\n  model.mode = 'Edit';\r\n  model.detailVisible = true;\r\n}\r\n\r\nfunction deleteEmployee(empl) {\r\n  axios.delete(`/api/employee?id=${empl.id}`).then((response) => {\r\n    model.data = response.data;\r\n  });\r\n}\r\n\r\nfunction getDepartments() {\r\n  axios.get('/api/department').then((response) => {\r\n    model.departments = response.data;\r\n  });\r\n}\r\n\r\nfunction getProfessions() {\r\n  axios.get('/api/profession').then((response) => {\r\n    model.professions = response.data;\r\n  });\r\n}\r\n\r\nfunction getEmployees() {\r\n  axios.get('/api/employee').then((response) => {\r\n    model.data = response.data;\r\n  });\r\n}\r\n\r\nfunction saveChanges(empl) {\r\n  if (model.mode === 'Add') {\r\n    addEmployee(empl);\r\n  } else if (model.mode === 'Edit') {\r\n    updateEmployee(empl);\r\n  }\r\n}\r\n\r\nasync function addEmployee(empl) {\r\n  console.log(empl)\r\n  await axios.post('/api/employee', empl).then(() => {\r\n    getEmployees();\r\n    model.detailVisible = false;\r\n  });\r\n}\r\n\r\nfunction updateEmployee(empl) {\r\n  axios.patch('/api/employee', empl).then(() => {\r\n    getEmployees();\r\n    model.detailVisible = false;\r\n  });\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.empl-tbl {\r\n  margin-top: 2em;\r\n}\r\n\r\n.no-data {\r\n  margin-top: 2em;\r\n}\r\n\r\ntr.data-row {\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n}\r\n\r\ntr.data-row:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n</style>\r\n","import script from \"./EmployeeManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmployeeManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EmployeeManagement.vue?vue&type=style&index=0&id=6a9810b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a9810b0\"]])\n\nexport default __exports__"],"names":["emits","__emit","props","__props","model","reactive","name","description","profession","department","saveChanges","alert","onMounted","mode","id","empl","__exports__","data","departments","professions","selectedEmpl","detailVisible","openAddModal","showDetail","item","deleteEmployee","axios","delete","then","response","getDepartments","get","getProfessions","getEmployees","addEmployee","updateEmployee","async","console","log","post","patch"],"sourceRoot":""}